{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\UsersAside\\\\UsersAside.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../UsersAside/UsersAside.css\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersAside() {\n  _s();\n  const {\n    users,\n    fetchUsers\n  } = userStore();\n  const [setUsers] = useState([]);\n  const navigate = useNavigate();\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [selectedTypeOfUser, setSelectedTypeOfUser] = useState(\"\");\n  const username = userStore(state => state.username);\n  const token = userStore(state => state.token);\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const users = await fetchUsers();\n        setUsers(users);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    getUsers();\n  }, [fetchUsers]);\n  useEffect(() => {\n    // Se um usuário estiver selecionado e os usuários estiverem carregados\n    if (selectedUser && users.length) {\n      // Encontra o usuário selecionado na lista de usuários\n      const selectedUserObj = users.find(user => user.id === selectedUser);\n      // Se o usuário existir e tiver um tipo, defina o tipo de usuário selecionado como o tipo do usuário\n      if (selectedUserObj && selectedUserObj.type) {\n        setSelectedTypeOfUser(selectedUserObj.type);\n      }\n    }\n  }, [selectedUser, users]);\n  const handleTypeOfUser = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${selectedUser}/role`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token,\n          role: selectedTypeOfUser // Adicionando o cabeçalho role com o valor selecionado\n        },\n        body: JSON.stringify({\n          role: selectedTypeOfUser\n        })\n      });\n      if (response.ok) {\n        await fetchUsers();\n        navigate(\"/users-list\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Error changing user role:\", response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error changing user role:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside-usersAside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-top\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register-user\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"aside-button\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/deleted-users\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"aside-button\",\n            id: \"deleted-users-button\",\n            children: \"Deleted Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"dropdown-label\",\n        children: \"Change user role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select\",\n          onChange: e => setSelectedUser(e.target.value),\n          value: selectedUser,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), users && users.filter(user => user.visible).map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: [user.firstName, \" \", user.lastName]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select role-select\",\n          onChange: e => setSelectedTypeOfUser(e.target.value),\n          value: selectedTypeOfUser,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"100\",\n            children: \"Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"200\",\n            children: \"Scrum Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"300\",\n            children: \"Product Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: handleTypeOfUser,\n            children: \"Change role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersAside, \"RcIYvSnBm8ehU+ZWatvEA7HaVDI=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersAside;\nexport default UsersAside;\nvar _c;\n$RefreshReg$(_c, \"UsersAside\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","userStore","jsxDEV","_jsxDEV","UsersAside","_s","users","fetchUsers","setUsers","navigate","selectedUser","setSelectedUser","selectedTypeOfUser","setSelectedTypeOfUser","username","state","token","getUsers","error","console","length","selectedUserObj","find","user","id","type","handleTypeOfUser","response","fetch","method","headers","role","body","JSON","stringify","ok","replace","responseBody","text","statusText","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","filter","visible","map","firstName","lastName","onClick","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/UsersAside/UsersAside.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../UsersAside/UsersAside.css\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\n\r\n\r\nfunction UsersAside() {\r\n    const { users, fetchUsers } = userStore();\r\n    const [setUsers] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedUser, setSelectedUser] = useState(\"\");\r\n    const [selectedTypeOfUser, setSelectedTypeOfUser] = useState(\"\");\r\n\r\n    const username = userStore((state) => state.username);\r\n    const token = userStore((state) => state.token);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            try {\r\n                const users = await fetchUsers();\r\n                setUsers(users);\r\n            } catch (error) {\r\n                console.error(\"Error fetching users:\", error);\r\n            }\r\n        };\r\n\r\n        getUsers();\r\n    }, [fetchUsers]);\r\n\r\n    useEffect(() => {\r\n        // Se um usuário estiver selecionado e os usuários estiverem carregados\r\n        if (selectedUser && users.length) {\r\n            // Encontra o usuário selecionado na lista de usuários\r\n            const selectedUserObj = users.find(user => user.id === selectedUser);\r\n            // Se o usuário existir e tiver um tipo, defina o tipo de usuário selecionado como o tipo do usuário\r\n            if (selectedUserObj && selectedUserObj.type) {\r\n                setSelectedTypeOfUser(selectedUserObj.type);\r\n            }\r\n        }\r\n    }, [selectedUser, users]);\r\n\r\n    const handleTypeOfUser = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${selectedUser}/role`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    token: token,\r\n                    role: selectedTypeOfUser // Adicionando o cabeçalho role com o valor selecionado\r\n                },\r\n                body: JSON.stringify({\r\n                    role: selectedTypeOfUser\r\n                }),\r\n            });\r\n            if (response.ok) {\r\n                await fetchUsers();\r\n                navigate(\"/users-list\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Error changing user role:\", response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error changing user role:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"aside-usersAside\">\r\n                <div className=\"buttons-top\">\r\n                    {/* Botão para adicionar tarefa que leva à página Add user */}\r\n                    <Link to=\"/register-user\">\r\n                        <button className=\"aside-button\">Add User</button>\r\n                    </Link>\r\n                    <Link to=\"/deleted-users\">\r\n                        <button className=\"aside-button\" id=\"deleted-users-button\">Deleted Users</button>\r\n                    </Link>\r\n                </div>\r\n                {/* Dropdown menu para alterar role do user */}\r\n                <label className=\"dropdown-label\">Change user role</label>\r\n                <div className=\"dropdown\">\r\n                    <select className=\"dropdown-select\" onChange={(e) => setSelectedUser(e.target.value)} value={selectedUser}>\r\n                        <option value=\"\">Choose user</option>\r\n                        {users && users.filter(user => user.visible).map(user => (\r\n                            <option key={user.id} value={user.id}>{user.firstName} {user.lastName}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select className=\"dropdown-select role-select\" onChange={(e) => setSelectedTypeOfUser(e.target.value)} value={selectedTypeOfUser}>\r\n                        <option value=\"\">Choose role</option>\r\n                        <option value=\"100\">Developer</option>\r\n                        <option value=\"200\">Scrum Master</option>\r\n                        <option value=\"300\">Product Owner</option>\r\n                    </select>\r\n                    <div>\r\n                        <button className=\"filter-button\" onClick={handleTypeOfUser}>Change role</button>\r\n                    </div>\r\n                    {/* Botão para deletar todas as tarefas do usuário selecionado */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersAside;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,8BAA8B;AACrC,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC;EACzC,MAAM,CAACO,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC/B,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMgB,QAAQ,GAAGb,SAAS,CAAEc,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EACrD,MAAME,KAAK,GAAGf,SAAS,CAAEc,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EAE/CnB,SAAS,CAAC,MAAM;IACZ,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMX,KAAK,GAAG,MAAMC,UAAU,CAAC,CAAC;QAChCC,QAAQ,CAACF,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDD,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhBV,SAAS,CAAC,MAAM;IACZ;IACA,IAAIa,YAAY,IAAIJ,KAAK,CAACc,MAAM,EAAE;MAC9B;MACA,MAAMC,eAAe,GAAGf,KAAK,CAACgB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKd,YAAY,CAAC;MACpE;MACA,IAAIW,eAAe,IAAIA,eAAe,CAACI,IAAI,EAAE;QACzCZ,qBAAqB,CAACQ,eAAe,CAACI,IAAI,CAAC;MAC/C;IACJ;EACJ,CAAC,EAAE,CAACf,YAAY,EAAEJ,KAAK,CAAC,CAAC;EAEzB,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2DAA0DlB,YAAa,OAAM,EAAE;QACzGmB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCd,KAAK,EAAEA,KAAK;UACZe,IAAI,EAAEnB,kBAAkB,CAAC;QAC7B,CAAC;QACDoB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBH,IAAI,EAAEnB;QACV,CAAC;MACL,CAAC,CAAC;MACF,IAAIe,QAAQ,CAACQ,EAAE,EAAE;QACb,MAAM5B,UAAU,CAAC,CAAC;QAClBE,QAAQ,CAAC,aAAa,EAAE;UAAE2B,OAAO,EAAE;QAAK,CAAC,CAAC;MAC9C,CAAC,MAAM;QACH,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAC1CnB,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAES,QAAQ,CAACY,UAAU,EAAEF,YAAY,CAAC;MACjF;IACJ,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAqC,QAAA,eACIrC,OAAA;MAAKsC,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7BrC,OAAA;QAAKsC,SAAS,EAAC,aAAa;QAAAD,QAAA,gBAExBrC,OAAA,CAACJ,IAAI;UAAC2C,EAAE,EAAC,gBAAgB;UAAAF,QAAA,eACrBrC,OAAA;YAAQsC,SAAS,EAAC,cAAc;YAAAD,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACP3C,OAAA,CAACJ,IAAI;UAAC2C,EAAE,EAAC,gBAAgB;UAAAF,QAAA,eACrBrC,OAAA;YAAQsC,SAAS,EAAC,cAAc;YAACjB,EAAE,EAAC,sBAAsB;YAAAgB,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN3C,OAAA;QAAOsC,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1D3C,OAAA;QAAKsC,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACrBrC,OAAA;UAAQsC,SAAS,EAAC,iBAAiB;UAACM,QAAQ,EAAGC,CAAC,IAAKrC,eAAe,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAACA,KAAK,EAAExC,YAAa;UAAA8B,QAAA,gBACtGrC,OAAA;YAAQ+C,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACpCxC,KAAK,IAAIA,KAAK,CAAC6C,MAAM,CAAC5B,IAAI,IAAIA,IAAI,CAAC6B,OAAO,CAAC,CAACC,GAAG,CAAC9B,IAAI,iBACjDpB,OAAA;YAAsB+C,KAAK,EAAE3B,IAAI,CAACC,EAAG;YAAAgB,QAAA,GAAEjB,IAAI,CAAC+B,SAAS,EAAC,GAAC,EAAC/B,IAAI,CAACgC,QAAQ;UAAA,GAAxDhC,IAAI,CAACC,EAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0D,CACjF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACT3C,OAAA;UAAQsC,SAAS,EAAC,6BAA6B;UAACM,QAAQ,EAAGC,CAAC,IAAKnC,qBAAqB,CAACmC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAACA,KAAK,EAAEtC,kBAAmB;UAAA4B,QAAA,gBAC9HrC,OAAA;YAAQ+C,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrC3C,OAAA;YAAQ+C,KAAK,EAAC,KAAK;YAAAV,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtC3C,OAAA;YAAQ+C,KAAK,EAAC,KAAK;YAAAV,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzC3C,OAAA;YAAQ+C,KAAK,EAAC,KAAK;YAAAV,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACT3C,OAAA;UAAAqC,QAAA,eACIrC,OAAA;YAAQsC,SAAS,EAAC,eAAe;YAACe,OAAO,EAAE9B,gBAAiB;YAAAc,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzC,EAAA,CAhGQD,UAAU;EAAA,QAGEJ,WAAW;AAAA;AAAAyD,EAAA,GAHvBrD,UAAU;AAkGnB,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}