{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\EditTask\\\\EditTask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { taskStore } from \"../../stores/TaskStore\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { categoryStore } from \"../../stores/CategoryStore\";\nimport \"../EditTask/EditTask.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTask() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    categories\n  } = categoryStore();\n  const {\n    taskId\n  } = useParams();\n  const token = userStore(state => state.token);\n  const userId = userStore(state => state.userId); // Obtém o userId do usuário logado\n  const task = taskStore(state => state.tasks.find(task => task.id === taskId));\n  console.log(\"token:\", token);\n  console.log(\"Task no edit task:\", task);\n  const [taskDetails, setTaskDetails] = useState({\n    title: \"\",\n    description: \"\",\n    priority: \"\",\n    startDate: \"\",\n    limitDate: \"\",\n    category: null\n  });\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [stateId, setStateId] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n  useEffect(() => {\n    if (task) {\n      setTaskDetails({\n        title: task.title || \"\",\n        description: task.description || \"\",\n        priority: task.priority || \"\",\n        startDate: task.startDate || \"\",\n        limitDate: task.limitDate || \"\",\n        category: task.category || null\n      });\n      setSelectedCategory(task.category || null);\n      setStateId(task.stateId || \"\");\n      setPriority(task.priority || \"\");\n    }\n  }, [task]);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"category\") {\n      const selectedCategory = categories.find(category => category.name === value) || null;\n      setSelectedCategory(selectedCategory);\n    } else {\n      setTaskDetails({\n        ...taskDetails,\n        [name]: value\n      });\n    }\n  };\n  const handleDateChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"startDate\" && taskDetails.limitDate && value > taskDetails.limitDate) {\n      setTaskDetails({\n        ...taskDetails,\n        startDate: value,\n        limitDate: value\n      });\n    } else {\n      setTaskDetails({\n        ...taskDetails,\n        [name]: value\n      });\n    }\n  };\n  const handleSaveTask = async () => {\n    try {\n      // Verifica se o userId associado à tarefa é o mesmo que o userId do usuário logado\n      if (task.userId !== userId) {\n        // Se não for o mesmo userId, não permite a edição da tarefa\n        console.error(\"Você só pode editar tarefas da sua autoria.\");\n        return;\n      }\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/updatetask/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        },\n        body: JSON.stringify({\n          ...taskDetails,\n          category: selectedCategory\n        })\n      });\n      if (response.ok) {\n        navigate(\"/home\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Error updating task:\", response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n  const handlestateClick = stateId => {\n    setStateId(stateId);\n  };\n  const handlePriorityClick = priority => {\n    setPriority(priority);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(EditTask, \"W0rSep9/n+4kOT2MvQyhDeQonW8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","taskStore","userStore","categoryStore","jsxDEV","_jsxDEV","EditTask","_s","navigate","categories","taskId","token","state","userId","task","tasks","find","id","console","log","taskDetails","setTaskDetails","title","description","priority","startDate","limitDate","category","selectedCategory","setSelectedCategory","stateId","setStateId","setPriority","handleInputChange","event","name","value","target","handleDateChange","handleSaveTask","error","response","fetch","method","headers","body","JSON","stringify","ok","replace","responseBody","text","statusText","handlestateClick","handlePriorityClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/EditTask/EditTask.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { taskStore } from \"../../stores/TaskStore\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\nimport { categoryStore } from \"../../stores/CategoryStore\";\r\nimport \"../EditTask/EditTask.css\";\r\n\r\nfunction EditTask() {\r\n    const navigate = useNavigate();\r\n    const { categories } = categoryStore();\r\n    const { taskId } = useParams();\r\n    const token = userStore((state) => state.token);\r\n    const userId = userStore((state) => state.userId); // Obtém o userId do usuário logado\r\n    const task = taskStore((state) => state.tasks.find(task => task.id === taskId));\r\n    console.log(\"token:\", token);\r\n\r\n    console.log(\"Task no edit task:\", task);\r\n\r\n    const [taskDetails, setTaskDetails] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        priority: \"\",\r\n        startDate: \"\",\r\n        limitDate: \"\",\r\n        category: null,\r\n    });\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [stateId, setStateId] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (task) {\r\n            setTaskDetails({\r\n                title: task.title || \"\",\r\n                description: task.description || \"\",\r\n                priority: task.priority || \"\",\r\n                startDate: task.startDate || \"\",\r\n                limitDate: task.limitDate || \"\",\r\n                category: task.category || null,\r\n            });\r\n            setSelectedCategory(task.category || null);\r\n            setStateId(task.stateId || \"\");\r\n            setPriority(task.priority || \"\");\r\n        }\r\n    }, [task]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        if (name === \"category\") {\r\n            const selectedCategory = categories.find(category => category.name === value) || null;\r\n            setSelectedCategory(selectedCategory);\r\n        } else {\r\n            setTaskDetails({ ...taskDetails, [name]: value });\r\n        }\r\n    };\r\n\r\n    const handleDateChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        if (name === \"startDate\" && taskDetails.limitDate && value > taskDetails.limitDate) {\r\n            setTaskDetails({\r\n                ...taskDetails,\r\n                startDate: value,\r\n                limitDate: value\r\n            });\r\n        } else {\r\n            setTaskDetails({ ...taskDetails, [name]: value });\r\n        }\r\n    };\r\n\r\n    const handleSaveTask = async () => {\r\n        try {\r\n            // Verifica se o userId associado à tarefa é o mesmo que o userId do usuário logado\r\n            if (task.userId !== userId) {\r\n                // Se não for o mesmo userId, não permite a edição da tarefa\r\n                console.error(\"Você só pode editar tarefas da sua autoria.\");\r\n                return;\r\n            }\r\n            \r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/updatetask/${taskId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    token: token,\r\n                },\r\n                body: JSON.stringify({ ...taskDetails, category: selectedCategory }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                navigate(\"/home\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Error updating task:\", response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating task:\", error);\r\n        }\r\n    };\r\n\r\n    const handlestateClick = (stateId) => {\r\n        setStateId(stateId);\r\n    };\r\n    \r\n    const handlePriorityClick = (priority) => {\r\n        setPriority(priority);\r\n    };\r\n\r\n    return (\r\n        <div className=\"edit-task\">\r\n            {/* Conteúdo do componente EditTask */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditTask;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAW,CAAC,GAAGN,aAAa,CAAC,CAAC;EACtC,MAAM;IAAEO;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAMY,KAAK,GAAGT,SAAS,CAAEU,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,MAAM,GAAGX,SAAS,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;EACnD,MAAMC,IAAI,GAAGb,SAAS,CAAEW,KAAK,IAAKA,KAAK,CAACG,KAAK,CAACC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKP,MAAM,CAAC,CAAC;EAC/EQ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,KAAK,CAAC;EAE5BO,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,IAAI,CAAC;EAEvC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC;IAC3CwB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,QAAQ,EAAEQ,WAAW,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,IAAIiB,IAAI,EAAE;MACNO,cAAc,CAAC;QACXC,KAAK,EAAER,IAAI,CAACQ,KAAK,IAAI,EAAE;QACvBC,WAAW,EAAET,IAAI,CAACS,WAAW,IAAI,EAAE;QACnCC,QAAQ,EAAEV,IAAI,CAACU,QAAQ,IAAI,EAAE;QAC7BC,SAAS,EAAEX,IAAI,CAACW,SAAS,IAAI,EAAE;QAC/BC,SAAS,EAAEZ,IAAI,CAACY,SAAS,IAAI,EAAE;QAC/BC,QAAQ,EAAEb,IAAI,CAACa,QAAQ,IAAI;MAC/B,CAAC,CAAC;MACFE,mBAAmB,CAACf,IAAI,CAACa,QAAQ,IAAI,IAAI,CAAC;MAC1CI,UAAU,CAACjB,IAAI,CAACgB,OAAO,IAAI,EAAE,CAAC;MAC9BE,WAAW,CAAClB,IAAI,CAACU,QAAQ,IAAI,EAAE,CAAC;IACpC;EACJ,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,MAAMmB,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAEpC,IAAIF,IAAI,KAAK,UAAU,EAAE;MACrB,MAAMP,gBAAgB,GAAGnB,UAAU,CAACO,IAAI,CAACW,QAAQ,IAAIA,QAAQ,CAACQ,IAAI,KAAKC,KAAK,CAAC,IAAI,IAAI;MACrFP,mBAAmB,CAACD,gBAAgB,CAAC;IACzC,CAAC,MAAM;MACHP,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAE,CAACe,IAAI,GAAGC;MAAM,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAIJ,KAAK,IAAK;IAChC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAEpC,IAAIF,IAAI,KAAK,WAAW,IAAIf,WAAW,CAACM,SAAS,IAAIU,KAAK,GAAGhB,WAAW,CAACM,SAAS,EAAE;MAChFL,cAAc,CAAC;QACX,GAAGD,WAAW;QACdK,SAAS,EAAEW,KAAK;QAChBV,SAAS,EAAEU;MACf,CAAC,CAAC;IACN,CAAC,MAAM;MACHf,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAE,CAACe,IAAI,GAAGC;MAAM,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA;MACA,IAAIzB,IAAI,CAACD,MAAM,KAAKA,MAAM,EAAE;QACxB;QACAK,OAAO,CAACsB,KAAK,CAAC,6CAA6C,CAAC;QAC5D;MACJ;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+DAA8DhC,MAAO,EAAC,EAAE;QAClGiC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCjC,KAAK,EAAEA;QACX,CAAC;QACDkC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,GAAG3B,WAAW;UAAEO,QAAQ,EAAEC;QAAiB,CAAC;MACvE,CAAC,CAAC;MAEF,IAAIa,QAAQ,CAACO,EAAE,EAAE;QACbxC,QAAQ,CAAC,OAAO,EAAE;UAAEyC,OAAO,EAAE;QAAK,CAAC,CAAC;MACxC,CAAC,MAAM;QACH,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAC1CjC,OAAO,CAACsB,KAAK,CAAC,sBAAsB,EAAEC,QAAQ,CAACW,UAAU,EAAEF,YAAY,CAAC;MAC5E;IACJ,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZtB,OAAO,CAACsB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMa,gBAAgB,GAAIvB,OAAO,IAAK;IAClCC,UAAU,CAACD,OAAO,CAAC;EACvB,CAAC;EAED,MAAMwB,mBAAmB,GAAI9B,QAAQ,IAAK;IACtCQ,WAAW,CAACR,QAAQ,CAAC;EACzB,CAAC;EAED,oBACInB,OAAA;IAAKkD,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEd;AAACpD,EAAA,CA3GQD,QAAQ;EAAA,QACIN,WAAW,EAETD,SAAS;AAAA;AAAA6D,EAAA,GAHvBtD,QAAQ;AA6GjB,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}