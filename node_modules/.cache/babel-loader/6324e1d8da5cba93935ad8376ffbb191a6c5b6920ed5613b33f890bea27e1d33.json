{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\Password\\\\Password.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../Password/Password.css\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Password() {\n  _s();\n  const [inputs, setInputs] = useState(\"\");\n  const navigate = useNavigate();\n  const username = userStore(state => state.username);\n  const token = userStore(state => state.token);\n  const password = userStore(state => state.password);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const user = {\n      username: username,\n      password: inputs.password\n    };\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        },\n        body: JSON.stringify(user)\n      });\n      if (response.ok) {\n        const user = await response.json();\n        navigate(\"/home\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Error updating password:\", response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error updating password:\", error);\n    }\n  };\n  const handleCancel = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"passwordPanel\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"password-register\",\n      id: \"password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"password-fieldsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"labels-password\",\n          id: \"currentPass-password-label\",\n          children: \"Current password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"password-fields\",\n          id: \"currentPass-password\",\n          name: \"currentPassword\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"labels-password\",\n          id: \"newPass-password-label\",\n          children: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"password-fields\",\n          id: \"newPassword-password\",\n          name: \"newPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"labels-password\",\n          id: \"newPassConfirm-password-label\",\n          children: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"password-fields\",\n          id: \"newPasswordConfirm-password\",\n          name: \"nemPasswordConfirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"password-Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"password-save-button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          id: \"password-cancel-button\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n}\n_s(Password, \"tUv2h/NIbLmXi/Htc5LZjF8lTAk=\", false, function () {\n  return [useNavigate];\n});\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","userStore","useNavigate","jsxDEV","_jsxDEV","Password","_s","inputs","setInputs","useState","navigate","username","state","token","password","handleSubmit","event","preventDefault","user","response","fetch","method","headers","body","JSON","stringify","ok","json","replace","responseBody","text","console","error","statusText","handleCancel","className","children","class","id","fileName","_jsxFileName","lineNumber","columnNumber","type","name","required","onClick","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/Password/Password.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../Password/Password.css\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Password() {\r\n    const [inputs, setInputs] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const username = userStore((state) => state.username);\r\n    const token = userStore((state) => state.token);\r\n    const password = userStore((state) => state.password);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            username: username,\r\n            password: inputs.password,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:8080/project_backend/rest/users/update/${username}/`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        token: token,\r\n                    },\r\n                    body: JSON.stringify(user),\r\n                }\r\n            );\r\n\r\n            if (response.ok) {\r\n                const user = await response.json();\r\n                navigate(\"/home\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Error updating password:\", response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating password:\", error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleCancel = (event) => {\r\n        event.preventDefault();        \r\n    }\r\n\r\n    \r\n    return (\r\n            <div className=\"passwordPanel\">\r\n                <form class=\"password-register\" id=\"password-form\">\r\n                    <div class=\"password-fieldsContainer\">\r\n                            <label class=\"labels-password\" id=\"currentPass-password-label\">Current password</label>\r\n                            <input type=\"password\" class=\"password-fields\" id=\"currentPass-password\" name=\"currentPassword\" required />\r\n                            <label class=\"labels-password\" id=\"newPass-password-label\">New password</label>\r\n                            <input type=\"password\" class=\"password-fields\" id=\"newPassword-password\" name=\"newPassword\" />\r\n                            <label class=\"labels-password\" id=\"newPassConfirm-password-label\">Confirm new password</label>\r\n                            <input type=\"password\" class=\"password-fields\" id=\"newPasswordConfirm-password\" name=\"nemPasswordConfirm\" />\r\n                    </div>\r\n                    <div class=\"password-Buttons\">\r\n                        <button type=\"submit\" id=\"password-save-button\">Save</button>\r\n                        <button type=\"reset\" id=\"password-cancel-button\" onClick={handleCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Password;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}