{"ast":null,"code":"// Define a store\nexport const categoryStore = create(persist(set => ({\n  categories: [],\n  // Função para adicionar uma nova categoria\n  addCategory: category => {\n    console.log(\"Adicionando categoria:\", category);\n    set(state => ({\n      categories: [...state.categories, category]\n    }));\n  },\n  // Função para editar uma categoria existente\n  editCategory: (oldCategory, updatedCategory) => {\n    console.log(\"Editando categoria:\", oldCategory, updatedCategory);\n    set(state => ({\n      categories: state.categories.map(category => category.name === oldCategory ? {\n        ...category,\n        ...updatedCategory\n      } : category)\n    }));\n  },\n  // Função para excluir uma categoria\n  deleteCategory: deleteCategory => {\n    console.log(\"Excluindo categoria:\", deleteCategory);\n    set(state => ({\n      categories: state.categories.filter(category => category.name !== deleteCategory)\n    }));\n  }\n}), {\n  name: \"categoryStore\",\n  storage: createJSONStorage(() => sessionStorage)\n}));","map":{"version":3,"names":["categoryStore","create","persist","set","categories","addCategory","category","console","log","state","editCategory","oldCategory","updatedCategory","map","name","deleteCategory","filter","storage","createJSONStorage","sessionStorage"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/stores/CategoryStore.jsx"],"sourcesContent":["// Define a store\r\nexport const categoryStore = create(\r\n    persist(\r\n        (set) => ({\r\n            categories: [],\r\n            // Função para adicionar uma nova categoria\r\n            addCategory: (category) => {\r\n                console.log(\"Adicionando categoria:\", category);\r\n                set((state) => ({\r\n                    categories: [...state.categories, category],\r\n                }));\r\n            },\r\n            // Função para editar uma categoria existente\r\n            editCategory: (oldCategory, updatedCategory) => {\r\n                console.log(\"Editando categoria:\", oldCategory, updatedCategory);\r\n                set((state) => ({\r\n                    categories: state.categories.map((category) =>\r\n                        category.name === oldCategory ? { ...category, ...updatedCategory } : category\r\n                    ),\r\n                }));\r\n            },\r\n            // Função para excluir uma categoria\r\n            deleteCategory: (deleteCategory) => {\r\n                console.log(\"Excluindo categoria:\", deleteCategory);\r\n                set((state) => ({\r\n                    categories: state.categories.filter((category) => category.name !== deleteCategory),\r\n                }));\r\n            },\r\n        }),\r\n        {\r\n            name: \"categoryStore\",\r\n            storage: createJSONStorage(() => sessionStorage),\r\n        }\r\n    )\r\n);\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAGC,MAAM,CAC/BC,OAAO,CACFC,GAAG,KAAM;EACNC,UAAU,EAAE,EAAE;EACd;EACAC,WAAW,EAAGC,QAAQ,IAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;IAC/CH,GAAG,CAAEM,KAAK,KAAM;MACZL,UAAU,EAAE,CAAC,GAAGK,KAAK,CAACL,UAAU,EAAEE,QAAQ;IAC9C,CAAC,CAAC,CAAC;EACP,CAAC;EACD;EACAI,YAAY,EAAEA,CAACC,WAAW,EAAEC,eAAe,KAAK;IAC5CL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,WAAW,EAAEC,eAAe,CAAC;IAChET,GAAG,CAAEM,KAAK,KAAM;MACZL,UAAU,EAAEK,KAAK,CAACL,UAAU,CAACS,GAAG,CAAEP,QAAQ,IACtCA,QAAQ,CAACQ,IAAI,KAAKH,WAAW,GAAG;QAAE,GAAGL,QAAQ;QAAE,GAAGM;MAAgB,CAAC,GAAGN,QAC1E;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EACD;EACAS,cAAc,EAAGA,cAAc,IAAK;IAChCR,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,cAAc,CAAC;IACnDZ,GAAG,CAAEM,KAAK,KAAM;MACZL,UAAU,EAAEK,KAAK,CAACL,UAAU,CAACY,MAAM,CAAEV,QAAQ,IAAKA,QAAQ,CAACQ,IAAI,KAAKC,cAAc;IACtF,CAAC,CAAC,CAAC;EACP;AACJ,CAAC,CAAC,EACF;EACID,IAAI,EAAE,eAAe;EACrBG,OAAO,EAAEC,iBAAiB,CAAC,MAAMC,cAAc;AACnD,CACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}