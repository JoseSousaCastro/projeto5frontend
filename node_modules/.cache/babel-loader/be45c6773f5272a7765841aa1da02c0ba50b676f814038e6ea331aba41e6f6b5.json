{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\TasksMain\\\\TasksMain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../TasksMain/TasksMain.css\";\nimport { taskStore } from \"../../stores/TaskStore\";\nimport TaskCard from \"../TaskCard/TaskCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksMain() {\n  _s();\n  // Utilize o hook useState para inicializar as tarefas\n  const [tasks, setTasks] = useState([]);\n  const [tasksDoing, setTasksDoing] = useState([]);\n  const [tasksDone, setTasksDone] = useState([]);\n\n  // UseEffect para atualizar as tarefas com as armazenadas na taskStore\n  useEffect(() => {\n    // Use uma função para acessar o estado atual da taskStore\n    const tasksFromStore = taskStore.getState().tasks;\n\n    // Filtre as tarefas de acordo com o stateId\n    const todoTasks = tasksFromStore.filter(task => task.stateId === 100);\n    const doingTasks = tasksFromStore.filter(task => task.stateId === 200);\n    const doneTasks = tasksFromStore.filter(task => task.stateId === 300);\n\n    // Atualize o estado das tarefas com os valores filtrados\n    setTasks(todoTasks);\n    setTasksDoing(doingTasks);\n    setTasksDone(doneTasks);\n  }, []); // Certifique-se de passar um array vazio como segundo argumento para executar o useEffect apenas uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-users-list\",\n    id: \"tasks-users-list-outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-wrap-task-list\",\n      id: \"tasks-users-list-page-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo-main\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-home\",\n            children: \"To do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"todo\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card-taskMain\",\n            children: /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo-main\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-home\",\n            children: \"Doing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"doing\",\n          children: tasksDoing.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card-taskMain\",\n            children: /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo-main\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-home\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"done\",\n          children: tasksDone.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card-taskMain\",\n            children: /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TasksMain, \"CWOfS57BjO3MfM7oC6rfg9ve9AU=\");\n_c = TasksMain;\nexport default TasksMain;\nvar _c;\n$RefreshReg$(_c, \"TasksMain\");","map":{"version":3,"names":["React","useEffect","useState","taskStore","TaskCard","jsxDEV","_jsxDEV","TasksMain","_s","tasks","setTasks","tasksDoing","setTasksDoing","tasksDone","setTasksDone","tasksFromStore","getState","todoTasks","filter","task","stateId","doingTasks","doneTasks","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/TasksMain/TasksMain.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../TasksMain/TasksMain.css\";\r\nimport { taskStore } from \"../../stores/TaskStore\";\r\nimport TaskCard from \"../TaskCard/TaskCard\";\r\n\r\nfunction TasksMain() {\r\n    // Utilize o hook useState para inicializar as tarefas\r\n    const [tasks, setTasks] = useState([]);\r\n    const [tasksDoing, setTasksDoing] = useState([]);\r\n    const [tasksDone, setTasksDone] = useState([]);\r\n\r\n    // UseEffect para atualizar as tarefas com as armazenadas na taskStore\r\n    useEffect(() => {\r\n        // Use uma função para acessar o estado atual da taskStore\r\n        const tasksFromStore = taskStore.getState().tasks;\r\n\r\n   \r\n        // Filtre as tarefas de acordo com o stateId\r\n        const todoTasks = tasksFromStore.filter(task => task.stateId === 100);\r\n        const doingTasks = tasksFromStore.filter(task => task.stateId === 200);\r\n        const doneTasks = tasksFromStore.filter(task => task.stateId === 300);\r\n\r\n        // Atualize o estado das tarefas com os valores filtrados\r\n        setTasks(todoTasks);\r\n        setTasksDoing(doingTasks);\r\n        setTasksDone(doneTasks);\r\n    }, []); // Certifique-se de passar um array vazio como segundo argumento para executar o useEffect apenas uma vez\r\n\r\n    return (\r\n        <div className=\"tasks-users-list\" id=\"tasks-users-list-outer-container\">\r\n            <div className=\"page-wrap-task-list\" id=\"tasks-users-list-page-wrap\">\r\n                <div className=\"task-section\">\r\n                    <div className=\"titulo-main\">\r\n                        <h2 className=\"main-home\">To do</h2>\r\n                    </div>\r\n                    <div className=\"panel\" id=\"todo\">\r\n                        {tasks.map(task => (\r\n                            <div className=\"task-card-taskMain\" key={task.id}>\r\n                                <TaskCard task={task} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-section\">\r\n                    <div className=\"titulo-main\">\r\n                        <h2 className=\"main-home\">Doing</h2>\r\n                    </div>\r\n                    <div className=\"panel\" id=\"doing\">\r\n                        {tasksDoing.map(task => (\r\n                            <div className=\"task-card-taskMain\" key={task.id}>\r\n                                <TaskCard task={task} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-section\">\r\n                    <div className=\"titulo-main\">\r\n                        <h2 className=\"main-home\">Done</h2>\r\n                    </div>\r\n                    <div className=\"panel\" id=\"done\">\r\n                        {tasksDone.map(task => (\r\n                            <div className=\"task-card-taskMain\" key={task.id}>\r\n                                <TaskCard task={task} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TasksMain;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}