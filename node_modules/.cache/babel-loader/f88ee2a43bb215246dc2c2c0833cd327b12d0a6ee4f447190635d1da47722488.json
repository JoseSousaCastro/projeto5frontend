{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\CategoriesAside\\\\CategoriesAside.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../CategoriesAside/CategoriesAside.css\";\nimport { categoryStore } from \"../../stores/CategoryStore\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni;\nfunction CategoriesAside() {\n  _s();\n  const {\n    categories,\n    fetchCategories\n  } = categoryStore();\n  const [newCategoryName, setNewCategoryName] = useState(\"\"); // Estado para o novo nome da categoria\n  const [editCategoryName, setEditCategoryName] = useState(\"\"); // Estado para o novo nome da categoria\n  const [selectedEditCategory, setSelectedEditCategory] = useState(\"\"); // Estado para a categoria selecionada no select de edição\n  const [selectedDeleteCategory, setSelectedDeleteCategory] = useState(\"\"); // Estado para a categoria selecionada no select de exclusão\n  const navigate = useNavigate();\n  const token = userStore(state => state.token);\n  console.log(\"Token:\", token);\n\n  // Função para lidar com a adição de uma nova categoria\n  const handleAddCategory = async () => {\n    // Verifica se já existe uma categoria com o mesmo nome\n    if (categories.find(category => category.name === newCategoryName)) {\n      console.error(\"Category with this name already exists\");\n      return;\n    }\n    try {\n      console.log({\n        name: newCategoryName\n      });\n      const response = await fetch('http://localhost:8080/project_backend/rest/users/newCategory/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          token: token\n        },\n        body: JSON.stringify({\n          name: newCategoryName\n        })\n      });\n      if (response.ok) {\n        fetchCategories();\n        setNewCategoryName(\"\");\n        setSelectedEditCategory(\"\");\n        setEditCategoryName(\"\");\n        setSelectedDeleteCategory(\"\");\n        navigate(\"/tasks-categories\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error('Error adding category:', response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error adding category:\", error);\n    }\n  };\n\n  // Função para lidar com a edição de uma categoria\n  const handleEditCategory = async () => {\n    // Verificar se uma categoria foi selecionada\n    if (!selectedEditCategory) {\n      console.error(\"Please select a category to edit\");\n      return;\n    }\n\n    // Verificar se o novo nome da categoria foi fornecido\n    if (!editCategoryName.trim()) {\n      console.error(\"Please provide a new name for the category\");\n      return;\n    }\n\n    // Verificar se o novo nome é diferente do nome atual da categoria\n    if (editCategoryName.trim() === selectedEditCategory) {\n      console.error(\"New category name cannot be the same as the current name\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/editCategory/${selectedEditCategory}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          token: token,\n          newCategoryName: editCategoryName // Enviar newCategoryName como um cabeçalho de requisição\n        },\n        body: JSON.stringify({}) // O corpo da requisição pode ser vazio neste caso\n      });\n      if (response.ok) {\n        fetchCategories();\n        setNewCategoryName(\"\");\n        setSelectedEditCategory(\"\");\n        setEditCategoryName(\"\");\n        setSelectedDeleteCategory(\"\");\n        navigate(\"/tasks-categories\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error('Error editing category:', response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error editing category:\", error);\n    }\n  };\n\n  // Função para lidar com a exclusão de uma categoria\n  const handleDeleteCategory = async () => {\n    if (!selectedDeleteCategory) {\n      console.error(\"Selected category not found\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/deleteCategory/${selectedDeleteCategory}`, {\n        method: 'DELETE',\n        headers: {\n          token: token\n        }\n      });\n      if (response.ok) {\n        fetchCategories();\n        setNewCategoryName(\"\");\n        setSelectedEditCategory(\"\");\n        setEditCategoryName(\"\");\n        setSelectedDeleteCategory(\"\");\n        navigate(\"/tasks-categories\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error('Error deleting category:', response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error deleting category:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-aside\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-back-home\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home\",\n          className: \"link-to-home\",\n          children: \"Back to tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"add-category-label\",\n          htmlFor: \"add-category-button\",\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-category-input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"aside-input\",\n            type: \"text\",\n            placeholder: \"New category\",\n            value: newCategoryName,\n            onChange: e => setNewCategoryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aside-button\",\n          id: \"add-category-button\",\n          onClick: handleAddCategory,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-edit-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"edit-category-label\",\n          htmlFor: \"edit-category-dropdown\",\n          children: \"Edit Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select\",\n          id: \"edit-category-dropdown\",\n          value: selectedEditCategory,\n          onChange: e => setSelectedEditCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Choose an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-category-input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"aside-input\",\n            id: \"edit-category-name-input\",\n            type: \"text\",\n            placeholder: \"New name\",\n            value: editCategoryName,\n            onChange: e => setEditCategoryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleEditCategory,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-delete-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"delete-category-label\",\n          htmlFor: \"delete-category-dropdown\",\n          children: \"Delete Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select\",\n          id: \"delete-category-dropdown\",\n          value: selectedDeleteCategory,\n          onChange: e => setSelectedDeleteCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Choose an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-category-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: handleDeleteCategory,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoriesAside, \"/LDXuP9p2YNgCv+6T09uAW8+NYg=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoriesAside;\nexport default CategoriesAside;\nvar _c;\n$RefreshReg$(_c, \"CategoriesAside\");","map":{"version":3,"names":["React","categoryStore","userStore","useState","useNavigate","jsxDEV","_jsxDEV","i","CategoriesAside","_s","categories","fetchCategories","newCategoryName","setNewCategoryName","editCategoryName","setEditCategoryName","selectedEditCategory","setSelectedEditCategory","selectedDeleteCategory","setSelectedDeleteCategory","navigate","token","state","console","log","handleAddCategory","find","category","name","error","response","fetch","method","headers","body","JSON","stringify","ok","replace","responseBody","text","statusText","handleEditCategory","trim","handleDeleteCategory","className","children","Link","to","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","value","onChange","e","target","id","onClick","disabled","selected","map","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/CategoriesAside/CategoriesAside.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../CategoriesAside/CategoriesAside.css\";\r\nimport { categoryStore } from \"../../stores/CategoryStore\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\ni\r\n\r\n\r\nfunction CategoriesAside() {\r\n    const { categories, fetchCategories } = categoryStore();\r\n    const [newCategoryName, setNewCategoryName] = useState(\"\"); // Estado para o novo nome da categoria\r\n    const [editCategoryName, setEditCategoryName] = useState(\"\"); // Estado para o novo nome da categoria\r\n    const [selectedEditCategory, setSelectedEditCategory] = useState(\"\"); // Estado para a categoria selecionada no select de edição\r\n    const [selectedDeleteCategory, setSelectedDeleteCategory] = useState(\"\"); // Estado para a categoria selecionada no select de exclusão\r\n    const navigate = useNavigate();\r\n\r\n    const token = userStore((state) => state.token);\r\n    console.log(\"Token:\", token);\r\n\r\n    // Função para lidar com a adição de uma nova categoria\r\n    const handleAddCategory = async () => {\r\n        // Verifica se já existe uma categoria com o mesmo nome\r\n        if (categories.find(category => category.name === newCategoryName)) {\r\n            console.error(\"Category with this name already exists\");\r\n            return;\r\n        }\r\n        try {\r\n            console.log({ name: newCategoryName });\r\n            const response = await fetch('http://localhost:8080/project_backend/rest/users/newCategory/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: token,\r\n                },\r\n                body: JSON.stringify({ name: newCategoryName }),\r\n            });\r\n            if (response.ok) {\r\n                fetchCategories();\r\n                setNewCategoryName(\"\");\r\n                setSelectedEditCategory(\"\");\r\n                setEditCategoryName(\"\");\r\n                setSelectedDeleteCategory(\"\");\r\n                navigate(\"/tasks-categories\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error('Error adding category:', response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding category:\", error);\r\n        }\r\n    };\r\n\r\n    // Função para lidar com a edição de uma categoria\r\n    const handleEditCategory = async () => {\r\n        // Verificar se uma categoria foi selecionada\r\n        if (!selectedEditCategory) {\r\n            console.error(\"Please select a category to edit\");\r\n            return;\r\n        }\r\n    \r\n        // Verificar se o novo nome da categoria foi fornecido\r\n        if (!editCategoryName.trim()) {\r\n            console.error(\"Please provide a new name for the category\");\r\n            return;\r\n        }\r\n    \r\n        // Verificar se o novo nome é diferente do nome atual da categoria\r\n        if (editCategoryName.trim() === selectedEditCategory) {\r\n            console.error(\"New category name cannot be the same as the current name\");\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/editCategory/${selectedEditCategory}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: token,\r\n                    newCategoryName: editCategoryName, // Enviar newCategoryName como um cabeçalho de requisição\r\n                },\r\n                body: JSON.stringify({}), // O corpo da requisição pode ser vazio neste caso\r\n            });\r\n            if (response.ok) {\r\n                fetchCategories();\r\n                setNewCategoryName(\"\");\r\n                setSelectedEditCategory(\"\");\r\n                setEditCategoryName(\"\");\r\n                setSelectedDeleteCategory(\"\");\r\n                navigate(\"/tasks-categories\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error('Error editing category:', response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error editing category:\", error);\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    // Função para lidar com a exclusão de uma categoria\r\n    const handleDeleteCategory = async () => {\r\n        if (!selectedDeleteCategory) {\r\n            console.error(\"Selected category not found\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/deleteCategory/${selectedDeleteCategory}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    token: token,\r\n                },\r\n            });\r\n            if (response.ok) {\r\n                fetchCategories();\r\n                setNewCategoryName(\"\");\r\n                setSelectedEditCategory(\"\");\r\n                setEditCategoryName(\"\");\r\n                setSelectedDeleteCategory(\"\");\r\n                navigate(\"/tasks-categories\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error('Error deleting category:', response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting category:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"categories-aside\">\r\n            <div className=\"aside\">\r\n                <div className=\"div-back-home\">\r\n                    <Link to=\"/home\" className=\"link-to-home\">Back to tasks</Link>\r\n                </div>\r\n                <div className=\"add-category\">\r\n                    <label className=\"add-category-label\" htmlFor=\"add-category-button\">Add Category</label>\r\n                    <div className=\"add-category-input-container\">\r\n                        <input\r\n                            className=\"aside-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"New category\"\r\n                            value={newCategoryName}\r\n                            onChange={(e) => setNewCategoryName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button className=\"aside-button\" id=\"add-category-button\" onClick={handleAddCategory}>Add</button>\r\n                </div>\r\n                <hr />\r\n                <div className=\"dropdown-edit-category\">\r\n                    <label className=\"edit-category-label\" htmlFor=\"edit-category-dropdown\">Edit Category</label>\r\n                    <select className=\"dropdown-select\" id=\"edit-category-dropdown\" value={selectedEditCategory} onChange={(e) => setSelectedEditCategory(e.target.value)}>\r\n                        <option value=\"\" disabled selected>Choose an option</option>\r\n                        {/* Mapeando as categorias para criar as opções do dropdown */}\r\n                        {categories.map(category => (\r\n                            <option key={category} value={category}>{category}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div className=\"edit-category-input-container\">\r\n                        <input className=\"aside-input\" id=\"edit-category-name-input\" type=\"text\" placeholder=\"New name\" value={editCategoryName} onChange={(e) => setEditCategoryName(e.target.value)} />\r\n                    </div>\r\n                    <button className=\"action-button\" onClick={handleEditCategory}>Save</button>\r\n                </div>\r\n                <hr />\r\n                <div className=\"dropdown-delete-category\">\r\n                    <label className=\"delete-category-label\" htmlFor=\"delete-category-dropdown\">Delete Category</label>\r\n                    <select className=\"dropdown-select\" id=\"delete-category-dropdown\" value={selectedDeleteCategory} onChange={(e) => setSelectedDeleteCategory(e.target.value)}>\r\n                        <option value=\"\" disabled selected>Choose an option</option>\r\n                        {/* Mapeando as categorias para criar as opções do dropdown */}\r\n                        {categories.map(category => (\r\n                            <option key={category} value={category}>{category}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div className=\"delete-category-button-container\">\r\n                        <button className=\"action-button\" onClick={handleDeleteCategory}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoriesAside;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}