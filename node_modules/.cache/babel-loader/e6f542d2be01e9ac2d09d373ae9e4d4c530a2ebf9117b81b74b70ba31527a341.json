{"ast":null,"code":"import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\n\n// Define a store\nexport const categoryStore = create(persist(set => ({\n  categories: [],\n  // Função para adicionar uma nova categoria\n  addCategory: category => set(state => ({\n    categories: [...state.categories, category]\n  })),\n  // Função para editar uma categoria existente\n  editCategory: (oldCategory, updatedCategory) => set(state => ({\n    categories: state.categories.map(category => category.name === oldCategory ? {\n      ...category,\n      ...updatedCategory\n    } : category)\n  })),\n  // Função para excluir uma categoria\n  deleteCategory: deleteCategory => set(state => ({\n    categories: state.categories.filter(category => category.name !== deleteCategory)\n  }))\n}), {\n  name: \"categoryStore\",\n  storage: createJSONStorage(() => sessionStorage)\n}));","map":{"version":3,"names":["create","persist","createJSONStorage","categoryStore","set","categories","addCategory","category","state","editCategory","oldCategory","updatedCategory","map","name","deleteCategory","filter","storage","sessionStorage"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/stores/CategoryStore.jsx"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { persist, createJSONStorage } from \"zustand/middleware\";\r\n\r\n// Define a store\r\nexport const categoryStore = create(\r\n    persist(\r\n        (set) => ({\r\n            categories: [],\r\n            // Função para adicionar uma nova categoria\r\n            addCategory: (category) =>\r\n            \r\n                set((state) => ({\r\n                    categories: [...state.categories, category],\r\n                })),\r\n            // Função para editar uma categoria existente\r\n            editCategory: (oldCategory, updatedCategory) =>\r\n                set((state) => ({\r\n                    categories: state.categories.map((category) =>\r\n                        category.name === oldCategory ? { ...category, ...updatedCategory } : category\r\n                    ),\r\n                })),\r\n            // Função para excluir uma categoria\r\n            deleteCategory: (deleteCategory) =>\r\n                set((state) => ({\r\n                    categories: state.categories.filter((category) => category.name !== deleteCategory),\r\n                })),\r\n        }),\r\n        {\r\n            name: \"categoryStore\",\r\n            storage: createJSONStorage(() => sessionStorage),\r\n        }\r\n    )\r\n);\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,EAAEC,iBAAiB,QAAQ,oBAAoB;;AAE/D;AACA,OAAO,MAAMC,aAAa,GAAGH,MAAM,CAC/BC,OAAO,CACFG,GAAG,KAAM;EACNC,UAAU,EAAE,EAAE;EACd;EACAC,WAAW,EAAGC,QAAQ,IAElBH,GAAG,CAAEI,KAAK,KAAM;IACZH,UAAU,EAAE,CAAC,GAAGG,KAAK,CAACH,UAAU,EAAEE,QAAQ;EAC9C,CAAC,CAAC,CAAC;EACP;EACAE,YAAY,EAAEA,CAACC,WAAW,EAAEC,eAAe,KACvCP,GAAG,CAAEI,KAAK,KAAM;IACZH,UAAU,EAAEG,KAAK,CAACH,UAAU,CAACO,GAAG,CAAEL,QAAQ,IACtCA,QAAQ,CAACM,IAAI,KAAKH,WAAW,GAAG;MAAE,GAAGH,QAAQ;MAAE,GAAGI;IAAgB,CAAC,GAAGJ,QAC1E;EACJ,CAAC,CAAC,CAAC;EACP;EACAO,cAAc,EAAGA,cAAc,IAC3BV,GAAG,CAAEI,KAAK,KAAM;IACZH,UAAU,EAAEG,KAAK,CAACH,UAAU,CAACU,MAAM,CAAER,QAAQ,IAAKA,QAAQ,CAACM,IAAI,KAAKC,cAAc;EACtF,CAAC,CAAC;AACV,CAAC,CAAC,EACF;EACID,IAAI,EAAE,eAAe;EACrBG,OAAO,EAAEd,iBAAiB,CAAC,MAAMe,cAAc;AACnD,CACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}