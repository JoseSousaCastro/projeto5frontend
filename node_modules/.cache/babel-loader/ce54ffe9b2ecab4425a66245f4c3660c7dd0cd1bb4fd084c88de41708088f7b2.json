{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\TasksMain\\\\TasksMain.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../TasksMain/TasksMain.css\";\nimport { taskStore } from \"../../stores/TaskStore\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksMain() {\n  _s();\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = userStore(state => state.token);\n        const response = await fetch(\"http://localhost:8080/project_backend/rest/users/tasks/\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n          // Adiciona as tarefas à store\n          data.forEach(task => taskStore.getState().addTask(task));\n        } else {\n          console.error(\"Failed to fetch tasks:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-users-list\",\n    id: \"tasks-users-list-outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-wrap\",\n      id: \"tasks-users-list-page-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titulo-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"main-home\",\n          children: \"To do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"todo\",\n          children: tasks.filter(task => task.stateId === \"TODO\").map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titulo-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"main-home\",\n          children: \"Doing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"doing\",\n          children: tasks.filter(task => task.stateId === \"DOING\").map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titulo-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"main-home\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"done\",\n          children: tasks.filter(task => task.stateId === \"DONE\").map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(TasksMain, \"UHGxLB0Ja0TRYNAV7rk63haTGtM=\", false, function () {\n  return [useNavigate];\n});\n_c = TasksMain;\nexport default TasksMain;\nvar _c;\n$RefreshReg$(_c, \"TasksMain\");","map":{"version":3,"names":["React","taskStore","useNavigate","userStore","jsxDEV","_jsxDEV","TasksMain","_s","navigate","tasks","setTasks","useState","useEffect","fetchTasks","token","state","response","fetch","method","headers","ok","data","json","forEach","task","getState","addTask","console","error","statusText","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","stateId","map","title","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/TasksMain/TasksMain.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"../TasksMain/TasksMain.css\";\r\nimport { taskStore } from \"../../stores/TaskStore\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\n\r\nfunction TasksMain() {\r\n    const navigate = useNavigate();\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const token = userStore((state) => state.token);\r\n                const response = await fetch(\"http://localhost:8080/project_backend/rest/users/tasks/\", {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`\r\n                    }\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setTasks(data);\r\n                    // Adiciona as tarefas à store\r\n                    data.forEach(task => taskStore.getState().addTask(task));\r\n                } else {\r\n                    console.error(\"Failed to fetch tasks:\", response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching tasks:\", error);\r\n            }\r\n        };\r\n\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"tasks-users-list\" id=\"tasks-users-list-outer-container\">\r\n            <div className=\"page-wrap\" id=\"tasks-users-list-page-wrap\">\r\n                <div className=\"titulo-main\">\r\n                    <h2 className=\"main-home\">To do</h2>\r\n                    <div className=\"panel\" id=\"todo\">\r\n                        {tasks.filter(task => task.stateId === \"TODO\").map(task => (\r\n                            <div key={task.id}>{task.title}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"titulo-main\">\r\n                    <h2 className=\"main-home\">Doing</h2>\r\n                    <div className=\"panel\" id=\"doing\">\r\n                        {tasks.filter(task => task.stateId === \"DOING\").map(task => (\r\n                            <div key={task.id}>{task.title}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"titulo-main\">\r\n                    <h2 className=\"main-home\">Done</h2>\r\n                    <div className=\"panel\" id=\"done\">\r\n                        {tasks.filter(task => task.stateId === \"DONE\").map(task => (\r\n                            <div key={task.id}>{task.title}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TasksMain;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}