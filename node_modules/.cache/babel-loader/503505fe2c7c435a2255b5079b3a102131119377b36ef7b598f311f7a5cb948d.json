{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\UsersAside\\\\UsersAside.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../UsersAside/UsersAside.css\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersAside() {\n  _s();\n  const {\n    users,\n    fet\n  } = userStore(); // Obtém a lista de usuários\n  const navigate = useNavigate();\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [selectedTypeOfUser, setSelectedTypeOfUser] = useState(\"\");\n  const username = userStore(state => state.username);\n  const token = userStore(state => state.token);\n  handleTypeOfUser = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/role`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        },\n        body: JSON.stringify({\n          role: selectedTypeOfUser\n        })\n      });\n      if (response.ok) {\n        fetchUsers();\n        navigate(\"/users-list\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Error changing user role:\", response.statusText, responseBody);\n      }\n    } catch (error) {\n      console.error(\"Error changing user role:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside-usersAside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-top\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-user\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"aside-button\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/users-deleted\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"aside-button\",\n            id: \"deleted-users-button\",\n            children: \"Deleted Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"dropdown-label\",\n        children: \"Change user role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select\",\n          onChange: e => setSelectedUser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), users && users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.username\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select role-select\",\n          onChange: e => setSelectedTypeOfUser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"100\",\n            children: \"Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"200\",\n            children: \"Scrum Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"300\",\n            children: \"Product Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: handleTypeOfUser,\n            children: \"Change role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersAside, \"GexGtMTgUxTBy/1M/VkULg3kECo=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersAside;\nexport default UsersAside;\nvar _c;\n$RefreshReg$(_c, \"UsersAside\");","map":{"version":3,"names":["React","useState","Link","useNavigate","userStore","jsxDEV","_jsxDEV","UsersAside","_s","users","fet","navigate","selectedUser","setSelectedUser","selectedTypeOfUser","setSelectedTypeOfUser","username","state","token","handleTypeOfUser","response","fetch","method","headers","body","JSON","stringify","role","ok","fetchUsers","replace","responseBody","text","console","error","statusText","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","target","value","map","user","onClick","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/UsersAside/UsersAside.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../UsersAside/UsersAside.css\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\n\r\nfunction UsersAside() {\r\n    const { users, fet } = userStore(); // Obtém a lista de usuários\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [selectedUser, setSelectedUser] = useState(\"\");\r\n    const [selectedTypeOfUser, setSelectedTypeOfUser] = useState(\"\");\r\n\r\n    const username = userStore((state) => state.username);\r\n    const token = userStore((state) => state.token);\r\n\r\n    handleTypeOfUser = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/role`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    token: token,\r\n                },\r\n                body: JSON.stringify({\r\n                    role: selectedTypeOfUser\r\n                }),\r\n            });\r\n            if (response.ok) {\r\n                fetchUsers();\r\n                navigate(\"/users-list\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Error changing user role:\", response.statusText, responseBody);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error changing user role:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"aside-usersAside\">\r\n                <div className=\"buttons-top\">\r\n                {/* Botão para adicionar tarefa que leva à página Add user */}\r\n                <Link to=\"/add-user\">\r\n                    <button className=\"aside-button\">Add User</button>\r\n                </Link>\r\n                <Link to=\"/users-deleted\">\r\n                    <button className=\"aside-button\" id=\"deleted-users-button\">Deleted Users</button>\r\n                </Link>\r\n                </div>\r\n                {/* Dropdown menu para alterar role do user */}\r\n                <label className=\"dropdown-label\">Change user role</label>\r\n                <div className=\"dropdown\">\r\n                    <select className=\"dropdown-select\" onChange={(e) => setSelectedUser(e.target.value)}>\r\n                        <option value=\"\">Choose user</option>\r\n                        {users && users.map(user => (\r\n                            <option key={user.id} value={user.id}>{user.username}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select className=\"dropdown-select role-select\" onChange={(e) => setSelectedTypeOfUser(e.target.value)}>\r\n                        <option value=\"\">Choose role</option>\r\n                        <option value=\"100\">Developer</option>\r\n                        <option value=\"200\">Scrum Master</option>\r\n                        <option value=\"300\">Product Owner</option>\r\n                    </select>\r\n                    <div>\r\n                        <button className=\"filter-button\" onClick={handleTypeOfUser}>Change role</button>\r\n                    </div>\r\n                    {/* Botão para deletar todas as tarefas do usuário selecionado */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersAside;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}