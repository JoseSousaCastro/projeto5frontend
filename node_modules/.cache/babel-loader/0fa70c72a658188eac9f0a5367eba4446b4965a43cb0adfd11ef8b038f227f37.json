{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\UserCard\\\\UserCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"../UserCard/UserCard.css\";\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { userStore } from '../../stores/UserStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserCard({\n  user\n}) {\n  _s();\n  const navigate = useNavigate();\n  const token = userStore(state => state.token);\n  const {\n    id,\n    username,\n    firstName,\n    lastName,\n    typeOfUser,\n    visible\n  } = user;\n  const handleEraseUser = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/visibility\"`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (response.ok) {\n        navigate(\"/users-list\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Erro ao apagar usuário:\", responseBody);\n      }\n    } catch (error) {\n      console.error(\"Erro ao apagar usuário:\", error);\n    }\n  };\n  //deleted-users\n\n  const handleDeleteUser = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/${username}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (response.ok) {\n        navigate(\"/deleted-users\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Erro ao apagar usuário:\", responseBody);\n      }\n    } catch (error) {\n      console.error(\"Erro ao apagar usuário:\", error);\n    }\n  };\n  const handleRestoreUser = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/visibility\"`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (response.ok) {\n        navigate(\"/users-list\", {\n          replace: true\n        });\n      } else {\n        const responseBody = await response.text();\n        console.error(\"Erro ao apagar usuário:\", responseBody);\n      }\n    } catch (error) {\n      console.error(\"Erro ao apagar usuário:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    style: {\n      backgroundColor: visible ? \"white\" : \"#EDEDED\"\n    },\n    children: [visible ? /*#__PURE__*/_jsxDEV(Link, {\n      to: `/edit-user/${id}`,\n      className: \"user-username-solo\",\n      children: [firstName, \" \", lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-username-solo user-username-solo-visible\",\n      children: [firstName, \" \", lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-visible\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"multimedia/dark-cross-01.png\",\n        alt: \"Visible\",\n        className: \"visible-icon\",\n        onClick: handleEraseUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-del-restore\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-restore\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"multimedia/reload1-03.png\",\n          alt: \"Restore\",\n          className: \"restore-icon\",\n          onClick: handleRestoreUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-delete\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"multimedia/dark-cross-01.png\",\n          alt: \"Delete\",\n          className: \"delete-icon\",\n          onClick: handleDeleteUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(UserCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserCard;\nvar _c;\n$RefreshReg$(_c, \"UserCard\");","map":{"version":3,"names":["React","Link","useNavigate","userStore","jsxDEV","_jsxDEV","UserCard","user","_s","navigate","token","state","id","username","firstName","lastName","typeOfUser","visible","handleEraseUser","response","fetch","method","headers","ok","replace","responseBody","text","console","error","handleDeleteUser","handleRestoreUser","className","style","backgroundColor","children","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/UserCard/UserCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport \"../UserCard/UserCard.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { userStore } from '../../stores/UserStore';\r\n\r\nexport default function UserCard({ user }) {\r\n    const navigate = useNavigate();\r\n    const token = userStore((state) => state.token);\r\n\r\n    const { id, username, firstName, lastName, typeOfUser, visible } = user;\r\n\r\n    const handleEraseUser = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/visibility\"`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    token: token\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                navigate(\"/users-list\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Erro ao apagar usuário:\", responseBody);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Erro ao apagar usuário:\", error);\r\n        }\r\n    }\r\n    //deleted-users\r\n\r\n    const handleDeleteUser = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/${username}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    token: token\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                navigate(\"/deleted-users\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Erro ao apagar usuário:\", responseBody);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Erro ao apagar usuário:\", error);\r\n        }\r\n    }\r\n\r\n    const handleRestoreUser = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/project_backend/rest/users/update/${username}/visibility\"`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    token: token\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                navigate(\"/users-list\", { replace: true });\r\n            } else {\r\n                const responseBody = await response.text();\r\n                console.error(\"Erro ao apagar usuário:\", responseBody);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Erro ao apagar usuário:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"user\" style={{ backgroundColor: visible ? \"white\" : \"#EDEDED\" }}>\r\n            {visible ? (\r\n                <Link to={`/edit-user/${id}`} className=\"user-username-solo\">\r\n                    {firstName} {lastName}\r\n                </Link>\r\n            ) : (\r\n                <div className=\"user-username-solo user-username-solo-visible\">\r\n                    {firstName} {lastName}\r\n                </div>\r\n            )}\r\n            {visible ? (\r\n                <div className=\"user-visible\">\r\n                    <img src=\"multimedia/dark-cross-01.png\" alt=\"Visible\" className=\"visible-icon\" onClick={handleEraseUser} />\r\n                </div>\r\n                \r\n            ) : (\r\n                <div className=\"user-del-restore\">\r\n                    <div className=\"user-restore\">\r\n                        <img src=\"multimedia/reload1-03.png\" alt=\"Restore\" className=\"restore-icon\" onClick={handleRestoreUser} />\r\n                    </div>\r\n                    <div className=\"user-delete\">\r\n                        <img src=\"multimedia/dark-cross-01.png\" alt=\"Delete\" className=\"delete-icon\" onClick={handleDeleteUser} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}