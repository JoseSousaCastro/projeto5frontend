{"ast":null,"code":"var _jsxFileName = \"D:\\\\AoR\\\\41.Projeto4\\\\projecto4frontend\\\\src\\\\components\\\\TasksMain\\\\TasksMain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../TasksMain/TasksMain.css\";\nimport { taskStore } from \"../../stores/TaskStore\";\nimport TaskCard from \"../TaskCard/TaskCard\";\nimport { userStore } from \"../../stores/UserStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksMain() {\n  _s();\n  // Utilize o hook useState para inicializar as tarefas\n  const [tasks, setTasks] = useState([]);\n  const [tasksDoing, setTasksDoing] = useState([]);\n  const [tasksDone, setTasksDone] = useState([]);\n  fetchTasks();\n  const token = userStore(state => state.token);\n\n  // UseEffect para atualizar as tarefas com as armazenadas na taskStore\n  useEffect(() => {\n    // Use uma função para acessar o estado atual da taskStore\n    const tasksFromStore = taskStore.getState().tasks;\n\n    // Filtre as tarefas cujo atributo erased seja false\n    const filteredTasks = tasksFromStore.filter(task => !task.erased);\n\n    // Filtre as tarefas de acordo com o stateId\n    const todoTasks = filteredTasks.filter(task => task.stateId === 100);\n    const doingTasks = filteredTasks.filter(task => task.stateId === 200);\n    const doneTasks = filteredTasks.filter(task => task.stateId === 300);\n\n    // Atualize o estado das tarefas com os valores filtrados\n    setTasks(todoTasks);\n    setTasksDoing(doingTasks);\n    setTasksDone(doneTasks);\n  }, []); // Certifique-se de passar um array vazio como segundo argumento para executar o useEffect apenas uma vez\n\n  function handleTaskDrop(e, newStateId) {\n    e.preventDefault();\n    const taskId = e.dataTransfer.getData('text/plain');\n    console.log(\"token:\", token);\n\n    // Atualizar o stateId da tarefa no servidor\n    fetch(`http://localhost:8080/project_backend/rest/users/tasks/${taskId}/${newStateId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        token: token\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update task state');\n      }\n      // Após a atualização bem-sucedida, chame a função fetchTasks() da taskStore para sincronizar os estados das tarefas\n      taskStore.fetchTasks();\n    }).catch(error => {\n      console.error('Error updating task state:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-users-list\",\n    id: \"tasks-users-list-outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-wrap-task-list\",\n      id: \"tasks-users-list-page-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo-main\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-home\",\n            children: \"To do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"todo\",\n          onDragOver: e => e.preventDefault(),\n          onDrop: e => handleTaskDrop(e, 100),\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card-taskMain\",\n            children: /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo-main\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-home\",\n            children: \"Doing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"doing\",\n          onDragOver: e => e.preventDefault(),\n          onDrop: e => handleTaskDrop(e, 200),\n          children: tasksDoing.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card-taskMain\",\n            children: /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo-main\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-home\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          id: \"done\",\n          onDragOver: e => e.preventDefault(),\n          onDrop: e => handleTaskDrop(e, 300),\n          children: tasksDone.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card-taskMain\",\n            children: /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksMain, \"CWOfS57BjO3MfM7oC6rfg9ve9AU=\");\n_c = TasksMain;\nexport default TasksMain;\nvar _c;\n$RefreshReg$(_c, \"TasksMain\");","map":{"version":3,"names":["React","useEffect","useState","taskStore","TaskCard","userStore","jsxDEV","_jsxDEV","TasksMain","_s","tasks","setTasks","tasksDoing","setTasksDoing","tasksDone","setTasksDone","fetchTasks","token","state","tasksFromStore","getState","filteredTasks","filter","task","erased","todoTasks","stateId","doingTasks","doneTasks","handleTaskDrop","e","newStateId","preventDefault","taskId","dataTransfer","getData","console","log","fetch","method","headers","then","response","ok","Error","catch","error","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","map","_c","$RefreshReg$"],"sources":["D:/AoR/41.Projeto4/projecto4frontend/src/components/TasksMain/TasksMain.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../TasksMain/TasksMain.css\";\r\nimport { taskStore } from \"../../stores/TaskStore\";\r\nimport TaskCard from \"../TaskCard/TaskCard\";\r\nimport { userStore } from \"../../stores/UserStore\";\r\n\r\nfunction TasksMain() {\r\n    // Utilize o hook useState para inicializar as tarefas\r\n    const [tasks, setTasks] = useState([]);\r\n    const [tasksDoing, setTasksDoing] = useState([]);\r\n    const [tasksDone, setTasksDone] = useState([]);\r\n    fetchTasks();\r\n\r\n    const token = userStore((state) => state.token);\r\n\r\n    // UseEffect para atualizar as tarefas com as armazenadas na taskStore\r\n    useEffect(() => {\r\n        // Use uma função para acessar o estado atual da taskStore\r\n        const tasksFromStore = taskStore.getState().tasks;\r\n\r\n        // Filtre as tarefas cujo atributo erased seja false\r\n        const filteredTasks = tasksFromStore.filter(task => !task.erased);\r\n\r\n        // Filtre as tarefas de acordo com o stateId\r\n        const todoTasks = filteredTasks.filter(task => task.stateId === 100);\r\n        const doingTasks = filteredTasks.filter(task => task.stateId === 200);\r\n        const doneTasks = filteredTasks.filter(task => task.stateId === 300);\r\n\r\n        // Atualize o estado das tarefas com os valores filtrados\r\n        setTasks(todoTasks);\r\n        setTasksDoing(doingTasks);\r\n        setTasksDone(doneTasks);\r\n    }, []); // Certifique-se de passar um array vazio como segundo argumento para executar o useEffect apenas uma vez\r\n\r\n\r\n    function handleTaskDrop(e, newStateId) {\r\n        e.preventDefault();\r\n        const taskId = e.dataTransfer.getData('text/plain');\r\n        console.log(\"token:\", token);\r\n    \r\n        // Atualizar o stateId da tarefa no servidor\r\n        fetch(`http://localhost:8080/project_backend/rest/users/tasks/${taskId}/${newStateId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: token,\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update task state');\r\n            }\r\n            // Após a atualização bem-sucedida, chame a função fetchTasks() da taskStore para sincronizar os estados das tarefas\r\n            taskStore.fetchTasks();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error updating task state:', error);\r\n        });\r\n    }\r\n\r\n    return (\r\n    <div className=\"tasks-users-list\" id=\"tasks-users-list-outer-container\">\r\n        <div className=\"page-wrap-task-list\" id=\"tasks-users-list-page-wrap\">\r\n            <div className=\"task-section\">\r\n                <div className=\"titulo-main\">\r\n                    <h2 className=\"main-home\">To do</h2>\r\n                </div>\r\n                <div className=\"panel\" id=\"todo\" onDragOver={(e) => e.preventDefault()} onDrop={(e) => handleTaskDrop(e, 100)}>\r\n                    {tasks.map(task => (\r\n                        <div className=\"task-card-taskMain\" key={task.id}>\r\n                            <TaskCard task={task} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"task-section\">\r\n                <div className=\"titulo-main\">\r\n                    <h2 className=\"main-home\">Doing</h2>\r\n                </div>\r\n                <div className=\"panel\" id=\"doing\" onDragOver={(e) => e.preventDefault()} onDrop={(e) => handleTaskDrop(e, 200)}>\r\n                    {tasksDoing.map(task => (\r\n                        <div className=\"task-card-taskMain\" key={task.id}>\r\n                            <TaskCard task={task} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"task-section\">\r\n                <div className=\"titulo-main\">\r\n                    <h2 className=\"main-home\">Done</h2>\r\n                </div>\r\n                <div className=\"panel\" id=\"done\" onDragOver={(e) => e.preventDefault()} onDrop={(e) => handleTaskDrop(e, 300)}>\r\n                    {tasksDone.map(task => (\r\n                        <div className=\"task-card-taskMain\" key={task.id}>\r\n                            <TaskCard task={task} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default TasksMain;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}